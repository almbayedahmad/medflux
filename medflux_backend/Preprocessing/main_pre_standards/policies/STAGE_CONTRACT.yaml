# Stage Contract

# This file defines the contract between stages (inputs/outputs)
# It ensures explicit stage contracts for safer refactoring

meta:
  version: 3
  id: stage_contract
  updated_at: "{{CREATED_AT}}"
  description: "Contract between stages (inputs/outputs)"

stage_contract:
  # Stage identification
  stage:
    name: "{{PHASE_NAME}}"
    id: "{{PHASE_ID}}"
    version: "{{PHASE_VERSION}}"
    order: 2
    description: "{{PHASE_DESCRIPTION}}"

  # Input contract
  inputs:
    - name: "generic_items"
      type: "array"
      description: "Generic input collection"
      required: true
      schema:
        type: "array"
        items:
          type: "object"
          properties:
            path:
              type: "string"
              description: "Path to input file"
            metadata:
              type: "object"
              description: "File metadata"
            options:
              type: "object"
              description: "Processing options"
          required: ["path"]

    - name: "io_config"
      type: "object"
      description: "I/O configuration"
      required: true
      schema:
        type: "object"
        properties:
          out_root:
            type: "string"
            description: "Output root directory"
          cache_dir:
            type: "string"
            description: "Cache directory"
          max_workers:
            type: "integer"
            description: "Maximum worker processes"
        required: ["out_root"]

    - name: "options_config"
      type: "object"
      description: "Processing options configuration"
      required: true
      schema:
        type: "object"
        properties:
          mode:
            type: "string"
            enum: ["native", "ocr", "mixed"]
            description: "Processing mode"
          lang:
            type: "string"
            description: "Language settings"
          dpi:
            type: "integer"
            description: "DPI setting"
          psm:
            type: "integer"
            description: "Page segmentation mode"
          tables_mode:
            type: "string"
            enum: ["detect", "extract", "none"]
            description: "Table processing mode"
        required: ["mode"]

    - name: "run_metadata"
      type: "object"
      description: "Runtime metadata"
      required: false
      schema:
        type: "object"
        properties:
          run_id:
            type: "string"
            description: "Unique run identifier"
          pipeline_id:
            type: "string"
            description: "Pipeline identifier"
          timestamp:
            type: "string"
            format: "date-time"
            description: "Run timestamp"
          user_id:
            type: "string"
            description: "User identifier"

  # Output contract
  outputs:
    - name: "unified_document"
      type: "object"
      description: "Unified document payload"
      required: true
      schema:
        type: "object"
        properties:
          schema_version:
            type: "string"
            description: "Schema version"
          run_id:
            type: "string"
            description: "Run identifier"
          pipeline_id:
            type: "string"
            description: "Pipeline identifier"
          doc_meta:
            type: "object"
            description: "Document metadata"
          per_page_stats:
            type: "array"
            description: "Per-page statistics"
          text_blocks:
            type: "array"
            description: "Text blocks"
          warnings:
            type: "array"
            description: "Warnings"
          logs:
            type: "array"
            description: "Processing logs"
        required: ["schema_version", "run_id", "pipeline_id", "doc_meta"]

    - name: "stage_stats"
      type: "object"
      description: "Aggregated stage metrics"
      required: true
      schema:
        type: "object"
        properties:
          processed_items_count:
            type: "integer"
            description: "Number of processed items"
          avg_latency_per_unit_ms:
            type: "number"
            description: "Average latency per unit"
          low_confidence_ratio:
            type: "number"
            description: "Ratio of low confidence results"
          error_count:
            type: "integer"
            description: "Number of errors"
          warning_count:
            type: "integer"
            description: "Number of warnings"
          processing_time_ms:
            type: "number"
            description: "Total processing time"
          memory_usage_mb:
            type: "number"
            description: "Memory usage"
        required: ["processed_items_count", "avg_latency_per_unit_ms"]

  # Required configuration keys
  required_config_keys:
    - "io.out_root"
    - "io.out_stats_path"
    - "options.mode"
    - "options.lang"
    - "options.dpi"
    - "options.psm"
    - "options.tables_mode"

  # Coordinate system
  coordinate_origin: "bottom-left"
  coordinate_unit: "pdf_points"

  # Data formats
  supported_input_formats:
    - "pdf"
    - "docx"
    - "txt"
    - "png"
    - "jpg"
    - "jpeg"
    - "tiff"

  supported_output_formats:
    - "json"
    - "yaml"
    - "xml"

  # Quality requirements
  quality_requirements:
    min_confidence: 0.7
    max_processing_time: 300
    max_memory_usage: "1GB"
    max_error_rate: 0.05

  # Performance requirements
  performance_requirements:
    max_latency_per_item: 30.0
    min_throughput: 10
    max_concurrent_items: 100
    max_queue_size: 1000

  # Error handling
  error_handling:
    fail_fast: false
    max_retries: 3
    retry_delay: 1.0
    error_threshold: 0.1
    fallback_behavior: "skip"

  # Validation rules
  validation_rules:
    input_validation:
      check_file_format: true
      check_file_size: true
      check_file_integrity: true
      max_file_size: "100MB"

    output_validation:
      check_schema: true
      check_completeness: true
      check_quality: true
      min_confidence: 0.7

  # Monitoring and observability
  monitoring:
    enable_metrics: true
    enable_logging: true
    enable_tracing: true
    metrics_interval: 60
    log_level: "INFO"

  # Security requirements
  security:
    enable_validation: true
    strict_mode: false
    allow_unsafe: false
    sanitize_inputs: true
    validate_outputs: true

  # Dependencies
  dependencies:
    required:
      - "pytesseract"
      - "PyMuPDF"
      - "Pillow"
      - "numpy"
      - "pandas"

    optional:
      - "opencv-python"
      - "scikit-learn"
      - "matplotlib"

  # External services
  external_services:
    ocr_service:
      required: false
      description: "External OCR service"
      timeout: 30
      retry_attempts: 3

    table_service:
      required: false
      description: "External table detection service"
      timeout: 30
      retry_attempts: 3

  # Versioning
  versioning:
    schema_version: "1.0.0"
    api_version: "v1"
    backward_compatibility: true
    deprecation_notice: 30

  # Testing requirements
  testing:
    unit_tests: true
    integration_tests: true
    performance_tests: true
    load_tests: true
    coverage_threshold: 80

  # Documentation requirements
  documentation:
    api_docs: true
    user_guide: true
    developer_guide: true
    troubleshooting: true
    examples: true

  # Compliance
  compliance:
    gdpr: true
    accessibility: true
    security: true
    performance: true
    reliability: true
